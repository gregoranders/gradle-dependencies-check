name: Development CI
on:
  push:
    branches:
      - development
env:
  CI: true
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  GITHUB_BRANCH: ${{ github.ref }}
  GITHUB_HEAD_REF: ${{ github.head_ref }}
  GITHUB_BASE_REF: ${{ github.base_ref }}
  GITHUB_COMMIT: ${{ github.sha }}
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        java: [ '17' ]
      fail-fast: false
    name: ${{ matrix.os }} JDK ${{ matrix.java }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v3.4.0
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3.9.0
        with:
          distribution: 'corretto'
          cache: 'gradle'
          java-version: ${{ matrix.java }}
      - name: Echo JAVA_HOME
        run: echo $JAVA_HOME
      - name: Echo JAVA version
        run: java --version
      - name: Cache SonarCloud packages
        if: matrix.os == 'ubuntu-latest'
        uses: actions/cache@v3.2.3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Verify Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Echo Gradle version
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --version
      - name: Execute clean, check and build
        uses: gradle/gradle-build-action@v2
        id: gradle
        with:
          arguments: --info --stacktrace --scan clean check build
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/development' && github.ref != 'refs/heads/release' }}
          gradle-home-cache-includes: |
            caches
            notifications
            jdks
            dependency-check-data
            wrapper
      - name: Add build scan URL as PR comment
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå ${{ github.workflow }} ${{ steps.gradle.outputs.build-scan-url }}'
            })
      - name: SonarCube analyze
        if: matrix.os == 'ubuntu-latest'
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          arguments: --info --stacktrace sonarqube
      - name: Upload reports as an artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: reports-jdk${{ matrix.java }}-${{ matrix.os }}
          path: build/reports
          retention-days: 2
      - name: Upload test results as an artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: junit-results-jdk${{ matrix.java }}-${{ matrix.os }}
          path: build/test-results
          retention-days: 1

  publish-test-results:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        java: [ '17' ]
      fail-fast: false
    name: Publish Unit Tests Results ${{ matrix.os }} JDK ${{ matrix.java }}
    needs: build
    if: always()
    steps:
      - name: Git checkout
        uses: actions/checkout@v3.4.0
        with:
          fetch-depth: 0
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: junit-results-jdk${{ matrix.java }}-${{ matrix.os }}
          path: junit-artifact
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          check_name: Unit Test Results jdk${{ matrix.java }}-${{ matrix.os }}
          junit_files: junit-artifact/**/*.xml
