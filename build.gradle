//file:noinspection GroovyAssignabilityCheck
plugins {
  id 'java'
  id 'java-library'
  id 'groovy'
  id 'idea'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'maven-publish'
  id 'signing'
  id 'project-report'
  id 'build-dashboard'
  id 'com.github.spotbugs' version '5.0.13'
  id 'org.owasp.dependencycheck' version '8.0.1'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.sonarqube' version '3.5.0.2730'
  id 'io.github.gregoranders.project-configuration' version '0.0.8'
}

wrapper {
  gradleVersion = '7.6'
  distributionType = Wrapper.DistributionType.BIN
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
    vendor = JvmVendorSpec.AMAZON
  }
}

repositories {
  mavenCentral()
  mavenLocal()
}

project.modularity.patchModule('gradle-api', "groovy-${property('groovyVersion')}.jar")
project.modularity.patchModule('gradle-api', "groovy-ant-${property('groovyVersion')}.jar")
project.modularity.patchModule('gradle-api', "groovy-astbuilder-${property('groovyVersion')}.jar")
project.modularity.patchModule('gradle-api', "groovy-console-${property('groovyVersion')}.jar")
project.modularity.patchModule('gradle-api', "groovy-datetime-${property('groovyVersion')}.jar")
project.modularity.patchModule('gradle-api', "groovy-dateutil-${property('groovyVersion')}.jar")
project.modularity.patchModule('gradle-api', "groovy-groovydoc-${property('groovyVersion')}.jar")
project.modularity.patchModule('gradle-api', "groovy-json-${property('groovyVersion')}.jar")
project.modularity.patchModule('gradle-api', "groovy-nio-${property('groovyVersion')}.jar")
project.modularity.patchModule('gradle-api', "groovy-sql-${property('groovyVersion')}.jar")
project.modularity.patchModule('gradle-api', "groovy-templates-${property('groovyVersion')}.jar")
project.modularity.patchModule('gradle-api', "groovy-test-${property('groovyVersion')}.jar")
project.modularity.patchModule('gradle-api', "groovy-xml-${property('groovyVersion')}.jar")

project.modularity.patchModule('gradle-api', "javaparser-core-${property('javaparserCoreVersion')}.jar")

project.modularity.patchModule('gradle-api', "jsr305-3.0.2.jar")

publishing {
  if (System.getenv('CI') == 'true') {
    repositories {
      maven {
        name = 'GitHubPackages'
        url = property('ghpUrl')
        credentials {
          username = System.getenv('GITHUB_ACTOR')
          password = System.getenv('GITHUB_TOKEN')
        }
      }
    }
  }
}

dependencyCheck {
  analyzers {
    nodeEnabled=false
    nodeAudit {
      skipDevDependencies=true
    }
  }
}

test {
  moduleOptions {
    runOnClasspath = true
  }
  testLogging {
    events = [
      'skipped',
      'failed',
    ]
    exceptionFormat = 'FULL'
  }
  systemProperty 'com.athaydes.spockframework.report.projectName', "${project.group}.${project.name}"
  systemProperty 'com.athaydes.spockframework.report.projectVersion', "${project.version}"

}

tasks.withType(JavaCompile).configureEach {
  options.compilerArgs += [
    '-Xlint:deprecation',
  ]
}

dependencies {

  annotationProcessor(
    [group: 'org.immutables', name: 'value', version: property('immutablesVersion')]
  )

  implementation(
    gradleApi(),
    [group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: property('spotbugsAnnotationsVersion')],
    [group: 'org.immutables', name: 'value-annotations', version: property('immutablesVersion')],
  )

  testImplementation(
    localGroovy(),
    [group: 'io.github.joke', name: 'spock-mockable', version: property('spockMockableVersion')],
  )

  testImplementation(
    [group: 'org.spockframework', name: 'spock-core', version: property('spockVersion')],
  ) {
    exclude group: 'org.codehaus.groovy'
  }

  testRuntimeOnly(
    [group: 'com.athaydes', name: 'spock-reports', version: property('spockReportsVersion')]
  ) {
    transitive = false
  }
}

sonarqube {
  properties {
    property 'sonar.host.url', 'https://sonarcloud.io'
    property 'sonar.projectKey', 'gregoranders_gradle-dependencies-check'
    property 'sonar.qualitygate.wait', true
    property 'sonar.links.homepage', 'https://github.com/gregoranders/gradle-dependencies-check'
    property 'sonar.links.ci', 'https://github.com/gregoranders/gradle-dependencies-check'
    property 'sonar.links.scm', 'https://github.com/gregoranders/gradle-dependencies-check'
    property 'sonar.links.issue', 'https://github.com/gregoranders/gradle-dependencies-check/issues'
    property 'sonar.java.spotbugs.reportPaths', 'build/reports/spotbugs/main/spotbugs.xml'
    property 'sonar.java.checkstyle.reportPaths', 'build/reports/checkstyle/main.xml'
    property 'sonar.java.pmd.reportPaths', 'build/reports/pmd/main.xml'
    property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    property 'sonar.dependencyCheck.htmlReportPath', 'build/reports/dependency-check/dependency-check-report.html'
    property 'sonar.junit.reportPaths', 'build/test-results/test'
    property 'sonar.java.file.suffixes', '.java'
    property 'sonar.sourceEncoding', 'UTF-8'
    property 'sonar.dependencyCheck.securityHotspot', true
    property 'sonar.dependencyCheck.summarize', true
  }
}
